import "Task.poosl"

process class Task78 extends Task

ports 
	In_F6_T3, 
	Out1_F11_T9,
	Out2_F12_T10,

	In1_F7_T3, 
	In2_F8_T4, 
	Out_F13_T10
	
messages 
	Control!MappedTo(String), In_F6_T3!InspectTokenAvailability(Integer), In_F6_T3!MappedTo(String), In_F6_T3!ReleaseRoom(),
	In_F6_T3?TokensAvailable(), Out1_F11_T9!MappedTo(String), Out1_F11_T9?ReservationSuccessful(), Out1_F11_T9!ReserveRoom(Integer, Integer),
	Out1_F11_T9!WriteTokens(), Out2_F12_T10!MappedTo(String), Out2_F12_T10?ReservationSuccessful(), Out2_F12_T10!ReserveRoom(Integer, Integer),
	Out2_F12_T10!WriteTokens(),
In1_F7_T3!InspectTokenAvailability(Integer), In1_F7_T3!MappedTo(String), In1_F7_T3!ReleaseRoom(),
	In1_F7_T3?TokensAvailable(), In2_F8_T4!InspectTokenAvailability(Integer), In2_F8_T4!MappedTo(String), In2_F8_T4!ReleaseRoom(),
	In2_F8_T4?TokensAvailable(), Out_F13_T10!MappedTo(String), Out_F13_T10?ReservationSuccessful(), Out_F13_T10!ReserveRoom(Integer, Integer),
	Out_F13_T10!WriteTokens()

variables

init 
	Initialise()()

methods

	CheckTokenAvailabilityForReads(Scenario:String)()
			In_F6_T3!InspectTokenAvailability(1);
			In_F6_T3?TokensAvailable;

		if Scenario = "S2" then
			In1_F7_T3!InspectTokenAvailability(2);
			In1_F7_T3?TokensAvailable;
			In2_F8_T4!InspectTokenAvailability(1);
			In2_F8_T4?TokensAvailable
		else
			In1_F7_T3!InspectTokenAvailability(1);
			In1_F7_T3?TokensAvailable
		fi

	NotifyBuffersAboutMapping()()
		par
			In_F6_T3!MappedTo(MapTo)
		and
			Out1_F11_T9!MappedTo(MapTo)
		and
			Out2_F12_T10!MappedTo(MapTo)
		and
			Control!MappedTo(MapTo)
        and
			In1_F7_T3!MappedTo(MapTo)
		and
			In2_F8_T4!MappedTo(MapTo)
		and
			Out_F13_T10!MappedTo(MapTo)
		rap

	PerformWrites(Scenario:String)()
		Out1_F11_T9!WriteTokens;
		Out2_F12_T10!WriteTokens;

		Out_F13_T10!WriteTokens

	ReleaseSpaceForReads(Scenario:String)()
			In_F6_T3!ReleaseRoom;

	if Scenario = "S2" then
		In2_F8_T4!ReleaseRoom
	fi;
		In1_F7_T3!ReleaseRoom

	ReserveSpaceForWrites(Scenario:String,Iteration:Integer)()
		if Scenario = "S1" then
			Out1_F11_T9!ReserveRoom(2,Iteration);
			Out1_F11_T9?ReservationSuccessful
		else
			Out1_F11_T9!ReserveRoom(1, Iteration);
			Out1_F11_T9?ReservationSuccessful
		fi;
		Out2_F12_T10!ReserveRoom(1, Iteration);
		Out2_F12_T10?ReservationSuccessful;

		Out_F13_T10!ReserveRoom(1, Iteration);
		Out_F13_T10?ReservationSuccessful
		

		